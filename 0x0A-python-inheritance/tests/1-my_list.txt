The ``1-my_list.py`` module
========================
This text file tests the ``1-my_list`` model


How to use '1-my_list.py':
````````````````````````
First import function from the module:
	>>> MyList = __import__('1-my_list').MyList
	
Pass no argument to print empty list:
	>>> my_list = MyList()
	>>> print(my_list)
	[]

Pass a single argument but MUST be an iterable argument:
	>>> my_list = MyList([1,5,6,8,0])
	>>> print(my_list)
	[1, 5, 6, 8, 0]

Pass a single argument which is not iterable:
	>>> my_list = MyList(None)
	Traceback (most recent call last):
	TypeError: 'NoneType' object is not iterable

	>>> my_list = MyList(True)
	Traceback (most recent call last):
	TypeError: 'bool' object is not iterable

Check that 'MyList' inherits from 'list':
	>>> issubclass(MyList, list)
	True

Check that appending works:
	>>> my_list = MyList()
	>>> my_list.append(3)
	>>> my_list.append(30)
	>>> my_list.append(13)
	>>> my_list.append(0)

	>>> print(my_list)
	[3, 30, 13, 0]

Check for single argument with negativee int:
	>>> my_list = MyList([-1, -2, -5, -3])
	>>> print(my_list)
	[-1, -2, -5, -3]

Check for more than one argument:
	>>> my_list = MyList([1,2,3], [4,5,6])
	Traceback (most recent call last):	
	TypeError: list expected at most 1 argument, got 2

``````````````
checking the `print_sorted` instance method
```````````````

Empty argument:
	>>> my_list = MyList()
	>>> my_list.print_sorted()
	[]

Single iterable argument:
	>>> my_list = MyList([1,5,6,8,0])
	>>> my_list.print_sorted()
	[0, 1, 5, 6, 8]

Appending elements to empty single list:
	>>> my_list = MyList()
	>>> my_list.append(3)
	>>> my_list.append(30)
	>>> my_list.append(13)
	>>> my_list.append(0)
	>>> my_list.print_sorted()
	[0, 3, 13, 30]

Single argument with list of negative ints:
	>>> my_list = MyList([-1, -2, -5, -3])
	>>> my_list.print_sorted()
	[-5, -3, -2, -1]


````````````````
Checking a list with string elements
`````````````````

List with all elements as strings(sorting respects ASCII):
	>>> my_list = MyList(['Kofi', 'kofi', 'yaw', 'Akwesi', 'Yaw'])
	>>> print(my_list)
	['Kofi', 'kofi', 'yaw', 'Akwesi', 'Yaw']

	>>> my_list.print_sorted()
	['Akwesi', 'Kofi', 'Yaw', 'kofi', 'yaw']

List with a mixture of strings and integers(can be printed but not sortable):
	>>> my_list = MyList(['Kofi', 'Yaw', 6, 2])
	>>> print(my_list)
	['Kofi', 'Yaw', 6, 2]
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	TypeError: '<' not supported between instances of 'int' and 'str'
